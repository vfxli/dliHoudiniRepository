<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="hdtk" label="HDTK">
    <memberTool name="fit_cam"/>
    <memberTool name="buildropnet"/>
    <memberTool name="createnull"/>
    <memberTool name="mergeselected"/>
    <memberTool name="pyrobound"/>
    <memberTool name="fbxabccopy"/>
    <memberTool name="fbxabcpaste"/>
    <memberTool name="fbxabccopy"/>
    <memberTool name="openpath1"/>
    <memberTool name="create_out"/>
    <memberTool name="create_out"/>
    <memberTool name="setupCache"/>
    <memberTool name="colorize"/>
    <memberTool name="jigsaw_camera"/>
    <memberTool name="visual_angle"/>
    <memberTool name="file_to_abs"/>
    <memberTool name="import_all_abc"/>
  </toolshelf>

  <tool name="fit_cam" label="Fit Cam" icon="OBJ_camera">
    <script scriptType="python"><![CDATA[from toolbar import fit_cam
fit_cam.main()]]></script>
  </tool>

  <tool name="buildropnet" label="Build Rop Net" icon="NETWORKS_rop">
    <script scriptType="python"><![CDATA[from toolbar import buildropnet
buildropnet.main()]]></script>
  </tool>

  <tool name="createnull" label="Create Null" icon="SOP_null">
    <script scriptType="python"><![CDATA[from toolbar import createnull
createnull.main()]]></script>
  </tool>

  <tool name="mergeselected" label="Merge Selected" icon="SOP_merge">
    <script scriptType="python"><![CDATA[from toolbar import mergeselected
mergeselected.main()]]></script>
  </tool>

  <tool name="openpath" label="Open Path" icon="SOP_file">
    <script scriptType="python"><![CDATA[from toolbar import openpath
openpath.main()]]></script>
  </tool>

  <tool name="pyrobound" label="Pyro Bound" icon="SOP_bound">
    <script scriptType="python"><![CDATA[from toolbar import pyrobound
pyrobound.main()]]></script>
  </tool>

  <tool name="fbxabcpaste" label="FbxAbcPaste" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[from toolbar import fbxabcpaste
fbxabcpaste.main()]]></script>
  </tool>

  <tool name="fbxabccopy" label="FbxAbcCopy" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[from toolbar import fbxabccopy
fbxabccopy.main()]]></script>
  </tool>

  <tool name="create_out" label="Create Out" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[from toolbar import create_out
create_out.main()]]></script>
  </tool>

  <tool name="import_all_abc" label="Import All ABC" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[from toolbar import import_all_abc
import_all_abc.main()]]></script>
  </tool>

  <tool name="openpath1" label="Open Path" icon="SOP_file">
    <script scriptType="python"><![CDATA[from toolbar import openpath
openpath.main()]]></script>
  </tool>

  <tool name="setupCache" label="Setup Cache" icon="SOP_file">
    <script scriptType="python"><![CDATA[from toolbar import setupCache
setupCache.main(kwargs)]]></script>
  </tool>

  <tool name="colorize" label="Colorize" icon="SOP_color">
    <script scriptType="python"><![CDATA[from toolbar import colorize
colorize.main()]]></script>
  </tool>

  <tool name="jigsaw_camera" label="Jigsaw Camera" icon="OBJ_camera">
    <script scriptType="python"><![CDATA[from toolbar import jigsaw_camera
jigsaw_camera.main()]]></script>
  </tool>

  <tool name="visual_angle" label="Visual Angle" icon="OBJ_camera">
    <script scriptType="python"><![CDATA[from toolbar import visual_angle
visual_angle.main()]]></script>
  </tool>

  <tool name="file_to_abs" label="file_to_abs" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[from toolbar import file_to_abs
file_to_abs.main()]]></script>
  </tool>

  <tool name="deadline" label="Deadline" icon="PLASMA_App">
    <script scriptType="python"><![CDATA[from __future__ import print_function
import sys
import traceback

from CallDeadlineCommand import CallDeadlineCommand

# Get the repository path
path =  CallDeadlineCommand([ "-GetRepositoryPath", "submission/Houdini/Main" ]).strip()
if path != "":
    path = path.replace( "\\", "/" )
    
    # Add the path to the system path
    if path not in sys.path :
        print("Appending \"" + path + "\" to system path to import SubmitHoudiniToDeadline module")
        sys.path.append( path )
    else:
        print( "\"%s\" is already in the system path" % path )

    # Import the script and call the main() function
    try:
        import SubmitHoudiniToDeadline
        SubmitHoudiniToDeadline.SubmitToDeadline( )
    except:
        print( traceback.format_exc() )
        print( "The SubmitHoudiniToDeadline.py script could not be found in the Deadline Repository. Please make sure that the Deadline Client has been installed on this machine, that the Deadline Client bin folder is set in the DEADLINE_PATH environment variable, and that the Deadline Client has been configured to point to a valid Repository." )
else:
    print( "The SubmitHoudiniToDeadline.py script could not be found in the Deadline Repository. Please make sure that the Deadline Client has been installed on this machine, that the Deadline Client bin folder is set in the DEADLINE_PATH environment variable, and that the Deadline Client has been configured to point to a valid Repository." )
]]></script>
  </tool>
</shelfDocument>
